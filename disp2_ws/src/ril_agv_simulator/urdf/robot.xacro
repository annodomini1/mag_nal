<?xml version="1.0"?>
<robot name="robot" 
    xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- INCLUDES -->
    <xacro:include filename="$(find ril_agv_simulator)/urdf/parameters.xacro" />
    <!-- BASE LINK -->
    <link name="base_link">
        <material name="orange"/>
        <!-- pose and inertial -->
        <pose>0 0 0 0 0 0</pose>
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="${base_mass}"/>
            <xacro:box_inertia mass="${base_mass}" x="${base_size_x}" y="${base_size_y}" z="${base_size_z}"/>
        </inertial>
        <!-- body -->
        <collision name="base_front_collision">
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="${base_size_x} ${base_size_y} ${base_size_z}"/>
            </geometry>
        </collision>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="${base_size_x} ${base_size_y} ${base_size_z}"/>
            </geometry>
        </visual>
        <!-- caster front -->
        <collision name="caster_front_collision">
            <origin rpy=" 0 0 0" xyz="${base_size_x/2-wheel_radius/2} 0 ${-wheel_radius/2}"/>
            <geometry>
                <sphere radius="${wheel_radius/2}"/>
            </geometry>
            <contact_coefficients/>
            <surface>
                <contact>
                    <ode>
                        <kp>${caster_kp}</kp>
                        <kd>${caster_kd}</kd>
                    </ode>
                </contact>
                <friction>
                    <ode>
                        <mu>${caster_mu}</mu>
                        <mu2>${caster_mu2}</mu2>
                        <slip1>${caster_slip1}</slip1>
                        <slip2>${caster_slip2}</slip2>
                    </ode>
                </friction>
            </surface>
        </collision>
        <visual>
            <origin rpy=" 0 0 0" xyz="${base_size_x/2-wheel_radius/2} 0 ${-wheel_radius/2}"/>
            <geometry>
                <sphere radius="${wheel_radius/2}"/>
            </geometry>
        </visual>
        <!-- caster back -->
        <collision name="caster_back_collision">
            <origin rpy=" 0 0 0" xyz="${-base_size_x/2+wheel_radius/2} 0 ${-wheel_radius/2}"/>
            <geometry>
                <sphere radius="${wheel_radius/2}"/>
            </geometry>
            <contact_coefficients/>
            <surface>
                <contact>
                    <ode>
                        <kp>${caster_kp}</kp>
                        <kd>${caster_kd}</kd>
                    </ode>
                </contact>
                <friction>
                    <ode>
                        <mu>${caster_mu}</mu>
                        <mu2>${caster_mu2}</mu2>
                        <slip1>${caster_slip1}</slip1>
                        <slip2>${caster_slip2}</slip2>
                    </ode>
                </friction>
            </surface>
        </collision>
        <visual>
            <origin rpy=" 0 0 0" xyz="${-base_size_x/2+wheel_radius/2} 0 ${-wheel_radius/2}"/>
            <geometry>
                <sphere radius="${wheel_radius/2}"/>
            </geometry>
        </visual>
    </link>
    <!-- MARKER LINK-->
    <link name="marker_link">
        <visual>
            <origin rpy=" 0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="${base_size_x} ${base_size_y+2*wheel_width} 0.001"/>
            </geometry>
        </visual>
    </link>
    <!-- MARKER JOINT-->
    <joint name="marker_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0.042"/>
        <child link="marker_link"/>
        <parent link="base_link"/>
    </joint>
    <!-- LEFT WHEEL LINK -->
    <link name="left_wheel_link">
        <inertial>
            <mass value="${wheel_mass}"/>
            <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
            <xacro:cylinder_inertia mass="${wheel_mass}" r="${wheel_radius}" l="${wheel_width}"/>
        </inertial>
        <collision name="left_wheel_collision">
            <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
            <surface>
                <contact>
                    <ode>
                        <kp>${wheel_kp}</kp>
                        <kd>${wheel_kd}</kd>
                    </ode>
                </contact>
                <friction>
                    <ode>
                        <mu>${wheel_mu}</mu>
                        <mu2>${wheel_mu2}</mu2>
                        <slip1>${wheel_slip1}</slip1>
                        <slip2>${wheel_slip2}</slip2>
                    </ode>
                </friction>
            </surface>
        </collision>
        <visual>
            <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
        </visual>
    </link>
    <!-- LEFT WHEEL JOINT -->
    <joint name="left_motor" type="continuous">
        <origin rpy="0 0 0" xyz="0.0 ${base_size_y/2+wheel_width/2} 0.0"/>
        <child link="left_wheel_link"/>
        <parent link="base_link"/>
        <axis rpy="0 0 0" xyz="0 1 0"/>
        <dynamics damping="${motor_damping}" friction="${motor_friction}"/>
    </joint>
    <!-- RIGHT WHEEL LINK -->
    <link name="right_wheel_link">
        <inertial>
            <mass value="${wheel_mass}"/>
            <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
            <cylinder_inertia mass="${wheel_mass}" r="${wheel_radius}" l="${wheel_width}"/>
        </inertial>
        <collision name="right_wheel_collision">
            <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
            <surface>
                <contact>
                    <ode>
                        <kp>${wheel_kp}</kp>
                        <kd>${wheel_kd}</kd>
                    </ode>
                </contact>
                <friction>
                    <ode>
                        <mu>${wheel_mu}</mu>
                        <mu2>${wheel_mu2}</mu2>
                        <slip1>${wheel_slip1}</slip1>
                        <slip2>${wheel_slip2}</slip2>
                    </ode>
                </friction>
            </surface>
        </collision>
        <visual>
            <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
        </visual>
    </link>
    <!-- RIGHT WHEEL JOINT -->
    <joint name="right_motor" type="continuous">
        <origin rpy="0 0 0" xyz="0 ${-base_size_y/2-wheel_width/2} 0"/>
        <child link="right_wheel_link"/>
        <parent link="base_link"/>
        <axis rpy="0 0 0" xyz="0 1 0"/>
        <dynamics damping="${motor_damping}" friction="${motor_friction}"/>
    </joint>
    <!-- TRANSMISSIONS -->
    <transmission name="left_motor_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="left_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="left_motor">
            <hardwareInterface>EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="right_motor_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="right_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="right_motor">
            <hardwareInterface>EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <!-- GAZEBO CONTROL -->
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <rosDebugLevel>Debug</rosDebugLevel>
            <publishWheelTF>false</publishWheelTF>
            <robotNamespace>robot_$(arg number)</robotNamespace>
            <publishTf>1</publishTf>
            <publishWheelJointState>false</publishWheelJointState>
            <alwaysOn>true</alwaysOn>
            <updateRate>100.0</updateRate>
            <leftJoint>left_motor</leftJoint>
            <rightJoint>right_motor</rightJoint>
            <wheelSeparation>${base_size_y+wheel_width}</wheelSeparation>
            <wheelDiameter>${2*wheel_radius}</wheelDiameter>
            <broadcastTF>1</broadcastTF>
            <wheelTorque>0.2</wheelTorque>
            <wheelAcceleration>10</wheelAcceleration>
            <commandTopic>cmd_vel</commandTopic>
            <odometryFrame>odom</odometryFrame>
            <odometryTopic>odom</odometryTopic>
            <robotBaseFrame>base_link</robotBaseFrame>
            <legacyMode>false</legacyMode>
            <publishOdomTF>true</publishOdomTF>
            <odometrySource>world</odometrySource>
        </plugin>
    </gazebo>
    <!-- GAZEBO IMU -->
    <link name="imu_link">
        <inertial>
            <mass value="0.001" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size = "0.005 0.005 0.005"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <box size = "0.005 0.005 0.005"/>
            </geometry>
        </collision>
    </link>

    <joint name="imu_joint" type="fixed">
        <axis xyz="0 0 0"/>
        <origin xyz="0 0 0.02" rpy="0 0 0" />
        <parent link="base_link"/>
        <child link="imu_link" />
    </joint>

    <gazebo>
        <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
            <alwaysOn>true</alwaysOn>
            <bodyName>imu_link</bodyName>
            <frameName>imu_frame</frameName>
            <topicName>imu</topicName>
            <serviceName>imu_service</serviceName>
            <gaussianNoise>0.01</gaussianNoise>
            <updateRate>100.0</updateRate>
        </plugin>
    </gazebo>

    <!-- GAZEBO LIDAR -->
    <joint name="hokuyo_joint" type="fixed">
        <axis xyz="0 1 0" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="hokuyo_link"/>
    </joint>

    <!-- Hokuyo Laser -->
    <link name="hokuyo_link">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.005 0.005 0.005"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.005 0.005 0.005"/>
            </geometry>
        </visual>

        <inertial>
            <mass value="1e-5" />
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>

    <gazebo reference="hokuyo_link">
        <sensor type="gpu_ray" name="head_hokuyo_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>30</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>-1.570796</min_angle>
                        <max_angle>1.570796</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>3.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
                <topicName>scan</topicName>
                <frameName>hokuyo_link</frameName>
            </plugin>
        </sensor>
    </gazebo>

    <!-- GAZEBO COLORS -->
    <gazebo reference="base_link">
        <material>Gazebo/White</material>
    </gazebo>
    <gazebo reference="left_wheel_link">
        <material>Gazebo/DarkGrey</material>
    </gazebo>
    <gazebo reference="right_wheel_link">
        <material>Gazebo/DarkGrey</material>
    </gazebo>
    <gazebo reference="marker_link">
        <material>MarkerData_$(arg number)</material>
    </gazebo>
</robot>